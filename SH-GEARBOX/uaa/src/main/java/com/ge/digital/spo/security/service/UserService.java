
package com.ge.digital.spo.security.service;

import java.util.List;

import com.ge.digital.spo.chain.infrastructure.user.model.User;
import com.ge.digital.spo.chain.infrastructure.user.vo.RoleVo;
import com.ge.digital.spo.chain.infrastructure.user.vo.UserByRoleVo;
import com.ge.digital.spo.chain.infrastructure.user.vo.UserBylistRoleVo;
import com.ge.digital.spo.chain.infrastructure.user.vo.UserVo;
import com.ge.digital.spo.controller.common.RestResponseCode;

public interface UserService {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.spo_user
     *
     * @mbg.generated Thu Sep 21 10:46:10 CST 2017
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.spo_user
     *
     * @mbg.generated Thu Sep 21 10:46:10 CST 2017
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.spo_user
     *
     * @mbg.generated Thu Sep 21 10:46:10 CST 2017
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.spo_user
     *
     * @mbg.generated Thu Sep 21 10:46:10 CST 2017
     */
    User selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.spo_user
     *
     * @mbg.generated Thu Sep 21 10:46:10 CST 2017
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.spo_user
     *
     * @mbg.generated Thu Sep 21 10:46:10 CST 2017
     */
    int updateByPrimaryKey(User record);
    List<UserVo> findByUserVo(UserVo vo);

	RestResponseCode saveUser(User entity);
	RestResponseCode deleteUser(User entity);
	RestResponseCode updateUser(User entity);
	List<UserVo>  findUser(UserVo vo);
	List<RoleVo> findByRoleVo(RoleVo vo);
	
	List<UserByRoleVo> findByUserByRoleVo(UserByRoleVo vo);
	RestResponseCode saveByUpdateRelUserRole(UserByRoleVo vo);

	List<UserBylistRoleVo>  findByCountUserRoleVo(UserByRoleVo vo);
	List<UserBylistRoleVo>  findByCountUserRoleVoByRoleName(UserByRoleVo vo);

	RestResponseCode updateUserIsActive(UserVo vo);

	RestResponseCode reSaveUser(UserVo vo);
}

